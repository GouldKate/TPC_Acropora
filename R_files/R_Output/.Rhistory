lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fittedT<<-rbind(All.fittedT,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.genotype<-(Data$genotype[1])
df.rate.type<-(Data$rate.type[1])
df.treatment<-(Data$treatment[1])
preds <- fit_boots %>%
unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(genotype=factor(df.genotype),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type))
All.CIT<<-rbind(All.CIT, preds)
}
mult.fit.curves(K2.df.GP.T1)
#### may need to filter out outliers ie ALL  M5OCd's (???? VERY LOW R in ALL, and SUPER HIgh in GP for across all temps-- normal? outlier perhaps)
#filter out certain outlier points for calcification and respo
mydata_M50Cd <- mydata %>%
filter(!(individual.ID == "M50Cd"))
filtdata<-read.csv("C:/Users/Kate/OneDrive - University of North Carolina at Chapel Hill/2019laptop/Documents/TPC_Acropora/R_files/R_Output/filteredData_TPC")
#Define the Schoolfield equation:
schoolfield_high <- function(lnc, E, Eh, Th, temp, Tc) {
Tc <- 273.15 + Tc
k <- 8.62e-5
boltzmann.term <- lnc + log(exp(E/k*(1/Tc - 1/temp)))
inactivation.term <- log(1/(1 + exp(Eh/k*(1/Th - 1/temp))))
return(boltzmann.term + inactivation.term)
}
K2.df<-filtdata%>%
filter(genotype=="K2")
M5.df<-filtdata%>%
filter(genotype=="M5")
M6.df<-filtdata%>%
filter(genotype=="M6")
#---- K2------
K2.df.GP<-K2.df%>%
filter(rate.type=="GP")
K2.df.R<-K2.df%>%
filter(rate.type=="R")
#----M5------
M5.df.GP<-M5.df%>%
filter(rate.type=="GP")
M5.df.R<-M5.df%>%
filter(rate.type=="R")
#------M6------
M6.df.GP<-M6.df%>%
filter(rate.type=="GP")
M6.df.R<-M6.df%>%
filter(rate.type=="R")
K2.df.GP.T1<-K2.df.GP%>%filter(treatment=="T1")
M5.df.GP.T1<-M5.df.GP%>%filter(treatment=="T1")
M6.df.GP.T1<-M6.df.GP%>%filter(treatment=="T1")
K2.df.GP.T2<-K2.df.GP%>%filter(treatment=="T2")
M5.df.GP.T2<-M5.df.GP%>%filter(treatment=="T2")
M6.df.GP.T2<-M6.df.GP%>%filter(treatment=="T2")
K2.df.GP.C<-K2.df.GP%>%filter(treatment=="C")
M5.df.GP.C<-M5.df.GP%>%filter(treatment=="C")
M6.df.GP.C<-M6.df.GP%>%filter(treatment=="C")
K2.df.GP.T3<-K2.df.GP%>%filter(treatment=="T3")
M5.df.GP.T3<-M5.df.GP%>%filter(treatment=="T3")
M6.df.GP.T3<-M6.df.GP%>%filter(treatment=="T3")
K2.df.R.T1<-K2.df.R%>%filter(treatment=="T1")
M5.df.R.T1<-M5.df.R%>%filter(treatment=="T1")
M6.df.R.T1<-M6.df.R%>%filter(treatment=="T1")
K2.df.R.T2<-K2.df.R%>%filter(treatment=="T2")
M5.df.R.T2<-M5.df.R%>%filter(treatment=="T2")
M6.df.R.T2<-M6.df.R%>%filter(treatment=="T2")
K2.df.R.C<-K2.df.R%>%filter(treatment=="C")
M5.df.R.C<-M5.df.R%>%filter(treatment=="C")
M6.df.R.C<-M6.df.R%>%filter(treatment=="C")
K2.df.R.T3<-K2.df.R%>%filter(treatment=="T3")
M5.df.R.T3<-M5.df.R%>%filter(treatment=="T3")
M6.df.R.T3<-M6.df.R%>%filter(treatment=="T3")
All.fittedT<-data.frame()#create an empty df to fill with fitted values
All.CIT<-data.frame()#create an empty df. to fill with confidence intervals
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fittedT<<-rbind(All.fittedT,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.genotype<-(Data$genotype[1])
df.rate.type<-(Data$rate.type[1])
df.treatment<-(Data$treatment[1])
preds <- fit_boots %>%
unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(genotype=factor(df.genotype),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type))
All.CIT<<-rbind(All.CIT, preds)
}
mult.fit.curves(K2.df.GP.T1)
View(filtdata)
View(filtdata)
View(filtdata)
All.fittedT<-data.frame()#create an empty df to fill with fitted values
All.CIT<-data.frame()#create an empty df. to fill with confidence intervals
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fittedT<<-rbind(All.fittedT,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.genotype<-(Data$genotype[1])
df.rate.type<-(Data$rate.type[1])
df.treatment<-(Data$treatment[1])
df.individual.ID<-(Data$individual.ID[1])
preds <- fit_boots %>%
unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(genotype=factor(df.genotype),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type))
All.CIT<<-rbind(All.CIT, preds)
}
mult.fit.curves(K2.df.GP.T1)
?unnest
?group_by
?summarise
All.fittedT<-data.frame()#create an empty df to fill with fitted values
All.CIT<-data.frame()#create an empty df. to fill with confidence intervals
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fittedT<<-rbind(All.fittedT,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.genotype<-(Data$genotype[1])
df.rate.type<-(Data$rate.type[1])
df.treatment<-(Data$treatment[1])
df.individual.ID<-(Data$individual.ID[1])
preds <- fit_boots %>%
tidyr::unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
dplyr:: group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(genotype=factor(df.genotype),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type))
All.CIT<<-rbind(All.CIT, preds)
}
mult.fit.curves(K2.df.GP.T1)
?>merge
?merge
?mutate
All.fittedT<-data.frame()#create an empty df to fill with fitted values
All.CIT<-data.frame()#create an empty df. to fill with confidence intervals
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fittedT<<-rbind(All.fittedT,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.genotype<-(Data$genotype[1])
df.rate.type<-(Data$rate.type[1])
df.treatment<-(Data$treatment[1])
df.individual.ID<-(Data$individual.ID[1])
preds <- fit_boots %>%
tidyr::unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
dplyr:: group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
dplyr::mutate(genotype=factor(df.genotype),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type))
All.CIT<<-rbind(All.CIT, preds)
}
mult.fit.curves(K2.df.GP.T1)
All.CI<-data.frame()#create an empty df. to fill with confidence intervals
All.fittedT<-data.frame()#create an empty df to fill with fitted values
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fittedT<<-rbind(All.fittedT,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.genotype<-(Data$genotype[1])
df.rate.type<-(Data$rate.type[1])
df.treatment<-(Data$treatment[1])
df.individual.ID<-(Data$individual.ID[1])
preds <- fit_boots %>%
unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(Species=factor(df.species),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type))
All.CI<<-rbind(All.CI, preds)
}
mult.fit.curves(K2.df.GP.T1)
library(nls.multstart)
library(broom)
library(magrittr)
library(ggplot2)
library(tidyverse)
library(plyr)
library(dplyr)
library(boot)
All.fittedT<-data.frame()#create an empty df to fill with fitted values
All.CI<-data.frame()#create an empty df. to fill with confidence intervals
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fittedT<<-rbind(All.fittedT,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.genotype<-(Data$genotype[1])
df.rate.type<-(Data$rate.type[1])
df.treatment<-(Data$treatment[1])
df.individual.ID<-(Data$individual.ID[1])
preds <- fit_boots %>%
unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(Species=factor(df.species),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type))
All.CI<<-rbind(All.CI, preds)
}
mult.fit.curves(M6.df.GP.T2)
All.fittedT<-data.frame()#create an empty df to fill with fitted values
All.CI<-data.frame()#create an empty df. to fill with confidence intervals
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fittedT<<-rbind(All.fittedT,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(log.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.fragment.ID<-(Data$fragment.ID[1])
df.genotype<-(Data$genotype[1])
df.rate.type<-(Data$rate.type[1])
df.treatment<-(Data$treatment[1])
preds <- fit_boots %>%
unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(Species=factor(df.species),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type))
All.CI<<-rbind(All.CI, preds)
}
mult.fit.curves(M5.df.GP.T1)
#made a test DF with just one treatment
require(dplyr)
mult.fit.curves(K2.df.GP.T1)
install.packages(c("callr", "checkmate", "chron", "clipr", "curl", "devtools", "dplyr", "esquisse", "gdtools", "ggplot2", "git2r", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "officer", "openssl", "pkgbuild", "plotrix", "processx", "quantreg", "Rcpp", "rmarkdown", "rvg", "segmented", "sys", "testthat", "tinytex", "usethis", "whisker", "xfun", "xml2", "zip"))
library(tidyverse)
library(magrittr)
library(ggplot2)
library(nls.multstart)
library(broom)
library(purrr)
library(plyr)
library(tidyverse)
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
library(dplyr)
