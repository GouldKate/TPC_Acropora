Pmax.GP.mod<-Anova(lm(Pmax~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP")))
Pmax.GP.mod
summary(Pmax.GP.mod)
mPGP<-aov(Pmax~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP"))
TukeyHSD(mPGP)
summary(mPGP)
Pmax
#linear model
Pmax.GP.mod<-Anova(lm(Pmax_datatest~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP")))
View(Pmax_datatest)
Pmax_datatest <- topt_noneg %>%
#select(genotype,  term, estimate, treatment, rate.type) %>%
#spread(term, estimate) %>%
mutate(Pmax = schoolfield_high(lnc = lnc, E = E, Th = Th, Eh = Eh, temp = topt, Tc = 27)) %>% #add in factors that make up schoolfield function, reference topt to get pmax
group_by(., fragment.ID2, rate.type, treatment, genotype)
View(Pmax_datatest)
Pmax_datatest <- topt_noneg %>%
#select(genotype,  term, estimate, treatment, rate.type) %>%
#spread(term, estimate) %>%
mutate(Pmax = schoolfield_high(lnc = lnc, E = E, Th = Th, Eh = Eh, temp = topt, Tc = 27)) %>% #add in factors that make up schoolfield function, reference topt to get pmax
group_by(., fragment.ID2, species, rate.type, treatment, genotype)
View(topt_noneg)
View(topt_data)
View(topt_dataspec)
View(topt_data)
View(topt_dataspec)
Pmax <- topt_dataspec%>%
#select(genotype,  term, estimate, treatment, rate.type) %>%
#spread(term, estimate) %>%
mutate(Pmax = schoolfield_high(lnc = lnc, E = E, Th = Th, Eh = Eh, temp = topt, Tc = 27)) %>% #add in factors that make up schoolfield function, reference topt to get pmax
group_by(., fragment.ID2,species, rate.type, treatment, genotype)
View(Pmax)
write.csv(Pmax, "C:/Users/Kate/OneDrive - University of North Carolina at Chapel Hill/2019laptop/Documents/TPC_Mesop_BDA/R_output/Final/Pmax_spec.csv")
#linear model
Pmax.R.mod<-Anova(lm(Pmax~treatment+genotype, data=subset(Pmax_datatest,rate.type=="R")))
#linear model
Pmax.R.mod<-Anova(lm(Pmax~treatment+genotype, data=subset(Pmax,rate.type=="R")))
Pmax.R.mod
Pmax.GP.mod<-Anova(lm(Pmax~treatment+species, data=subset(Pmaxt,rate.type=="GP")))
Pmax.GP.mod<-Anova(lm(Pmax~treatment+species, data=subset(Pmax,rate.type=="GP")))
Pmax.GP.mod
summary(Pmax.GP.mod)
mGP<-aov(Pmax~treatment+species, data=subset(Pmax,rate.type=="GP"))
TukeyHSD(mGP)
summary(mGP)
Pmax.GP.mod<-Anova(lm(Pmax~genotype, data=subset(Pmax,rate.type=="GP")))
Pmax.GP.mod
summary(Pmax.GP.mod)
Pmax.GP.mod<-Anova(lm(Pmax~genotype, data=subset(Pmax,rate.type=="GP")))
Pmax.GP.mod
summary(Pmax.GP.mod)
Pmax.GP.mod<-Anova(lm(Pmax~treatment +genotype, data=subset(Pmax,rate.type=="GP")))
Pmax.GP.mod
Pmax.GP.mod<-Anova(lm(Pmax~species +genotype, data=subset(Pmax,rate.type=="GP")))
Pmax.GP.mod
summary(Pmax.GP.mod)
#linear model
Pmax.GP.mod<-Anova(lm(Pmax_datatest~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP")))
#linear model
Pmax.GP.mod<-Anova(lm(Pmax_datatest~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP")))
mPGP<-aov(Pmax~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP"))
TukeyHSD(mPGP)
summary(mPGP)
mPGP<-aov(Pmax~treatment+species, data=subset(Pmax_datatest,rate.type=="GP"))
mPGP<-aov(Pmax~treatment+species, data=subset(Pmax,rate.type=="GP"))
TukeyHSD(mPGP)
summary(mPGP)
#linear model
Pmax.GP.mod<-Anova(lm(Pmax_datatest~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP")))
Pmax.GP.mod
#linear model
Pmax.GP.mod<-Anova(lm(Pmax_datatest~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP")))
#linear model
Pmax.GP.mod<-Anova(lm(Pmax_datatest~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP")))
mPGP<-aov(Pmax~treatment+fragment.ID2, data=subset(Pmax_datatest,rate.type=="GP"))
TukeyHSD(mPGP)
summary(mPGP)
Pmax %>%
tab_cells(topt_C, Pmax, E, Eh, lnc, Th) %>%
tab_cols(total(), treatment) %>%
tab_stat_mean_sd_n() %>%
tab_last_sig_means(subtable_marks = "both") %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
install.packages("expss")
library(expss)
Pmax %>%
tab_cells(topt_C, Pmax, E, Eh, lnc, Th) %>%
tab_cols(total(), treatment) %>%
tab_stat_mean_sd_n() %>%
tab_last_sig_means(subtable_marks = "both") %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
View(Mydata)
Pmax = apply_labels(Pmax,
Pmax = apply_labels(Pmax,
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated")
Pmax = apply_labels(Pmax,
Th = "Temperature (K) at which half of enzymes are inactivated",
Pmax = apply_labels(Pmax,
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"=GP, "Respiration" =R),
treatment= c("Shallow"= shallow, "Mesophotic"= deep))
Pmax = apply_labels(Pmax,
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"=GP,
"Respiration" =R),
treatment= c("Shallow"= shallow,
"Mesophotic"= deep))
View(Pmax)
Pmax2 = apply_labels(Pmax,
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"=GP,
"Respiration" =R),
treatment= c("Shallow"= shallow,
"Mesophotic"= deep))
Pmax2 = apply_labels(Pmax,
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"="GP",
"Respiration" ="R"),
treatment= c("Shallow"= "shallow",
"Mesophotic"= "deep"))
View(Pmax2)
cro(Pmax2$species, Pmax2$Pmax)
Pmax2 %>%
tab_cells(topt_C, Pmax, E, Eh, lnc, Th) %>%
tab_cols(total(), genotypes) %>%
tab_stat_mean_sd_n() %>%
tab_last_sig_means(subtable_marks = "both") %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
Pmax2 %>%
tab_cells(topt_C, Pmax, E, Eh, lnc, Th) %>%
tab_cols(total(), genotypes) %>%
tab_stat_mean_sd_n() %>%
tab_last_sig_means(subtable_marks = "both") %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
Pmax2 %>%
tab_cells(topt_C, Pmax, E, Eh, lnc, Th) %>%
tab_cols(total(), genotype) %>%
tab_stat_mean_sd_n() %>%
tab_last_sig_means(subtable_marks = "both") %>%
tab_pivot() %>%
set_caption("Table with summary statistics and significance marks.")
data.summaryPmax<-Pmax %>%
group_by(fragment.ID2, treatment, rate.type) %>%
dplyr::summarise(meanPmax=mean(Pmax), sePmax=sd(Pmax)/sqrt(n()))
Allsumfinal2<-left_join(Allsumfinal, data.summaryPmax)
View(Allsumfinal2)
write.csv(Allsumfinal2, "C:/Users/Kate/OneDrive - University of North Carolina at Chapel Hill/2019laptop/Documents/TPC_Mesop_BDA/R_output/Final/All.sums_parameters2.csv")
data.summaryPmax<-Pmax %>%
group_by(fragment.ID2, treatment, rate.type, species) %>%
dplyr::summarise(meanPmax=mean(Pmax), sePmax=sd(Pmax)/sqrt(n()))
Allsumfinal2<-left_join(Allsumfinal, data.summaryPmax)
View(Allsumfinal2)
Allsumfinal2<-full_join(Allsumfinal, data.summaryPmax)
data.summarytoptE<-topt_noneg %>%
group_by(fragment.ID2, treatment, rate.type, species) %>% #tells to group by these two factors
dplyr::summarise(meanE=mean(E), seE=sd(E)/sqrt(n()))#%>%
View(Toptmeansp)
topt_dataspec
View(topt_dataspec)
data.summarytoptE<-topt_datasoec %>%
group_by(fragment.ID2, treatment, rate.type) %>% #tells to group by these two factors
dplyr::summarise(meanE=mean(E), seE=sd(E)/sqrt(n()))#%>%
data.summarytoptE<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.type) %>% #tells to group by these two factors
dplyr::summarise(meanE=mean(E), seE=sd(E)/sqrt(n()))#%>%
data.summarytoptEh<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.type) %>%
dplyr::summarise(meanEh=mean(Eh), seEh=sd(Eh)/sqrt(n()))
data.summarytoptlnc<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.type) %>%
dplyr::summarise(meanlnc=mean(lnc), selnc=sd(lnc)/sqrt(n()))
data.summarytoptE<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.typespecies) %>% #tells to group by these two factors
dplyr::summarise(meanE=mean(E), seE=sd(E)/sqrt(n()))#%>%
data.summarytoptE<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.type,species) %>% #tells to group by these two factors
dplyr::summarise(meanE=mean(E), seE=sd(E)/sqrt(n()))#%>%
data.summarytoptEh<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.type,species) %>%
dplyr::summarise(meanEh=mean(Eh), seEh=sd(Eh)/sqrt(n()))
data.summarytoptlnc<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.type,species) %>%
dplyr::summarise(meanlnc=mean(lnc), selnc=sd(lnc)/sqrt(n()))
data.summarytoptTh<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.type,species) %>%
dplyr::summarise(meanTh=mean(Th), seTh=sd(Th)/sqrt(n()))
data.summarytoptTopt<-topt_dataspec %>%
group_by(fragment.ID2, treatment, rate.type,species) %>%
dplyr::summarise(meanTopt=mean(topt_C), seTopt=sd(topt_C)/sqrt(n()))
data.summaryPmax<-Pmax %>%
group_by(fragment.ID2, treatment, rate.type, species) %>%
dplyr::summarise(meanPmax=mean(Pmax), sePmax=sd(Pmax)/sqrt(n()))
Allsum<-left_join(data.summarytoptTopt, data.summarytoptE)
Allsum2<-left_join(Allsum, data.summarytoptTh)
Allsum3<-left_join(Allsum2,data.summarytoptEh)
Allsumfinal<-left_join(Allsum3, data.summarytoptlnc)
Allsumfinal3<-left_join(Allsumfinal, data.summaryPmax)
View(Allsumfinal3)
write.csv(Allsumfinal3, "C:/Users/Kate/OneDrive - University of North Carolina at Chapel Hill/2019laptop/Documents/TPC_Mesop_BDA/R_output/Final/All.sums_parameters3.csv")
MeanParams
Allsumfinal3 = apply_labels(Allsumfinal3,
fragment.ID2= c("Mesophotic PAST"="MA", "Mesophotic MCAV" ="MC",
"Mesophotic OFRA" ="MF",
"Mesophotic DLAB"="ML"
"Shallow PAST" = "SA",
"Shallow OFRA" ="SF",
"Shallow MCAV" ="SC"
"Shallow DLBA"="SL"),
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"="GP",
"Respiration" ="R"),
treatment= c("Shallow"= "shallow",
"Mesophotic"= "deep"))
Allsumfinal3 = apply_labels(Allsumfinal3,
fragment.ID2= c("Mesophotic PAST"="MA", "Mesophotic MCAV" ="MC",
"Mesophotic OFRA" ="MF",
"Mesophotic DLAB"="ML"
"Shallow PAST" = "SA",
"Shallow OFRA" ="SF",
"Shallow MCAV" ="SC"
"Shallow DLBA"="SL"),
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"="GP",
"Respiration" ="R"),
treatment= c("Shallow"= "shallow",
"Mesophotic"= "deep")))
"Shallow DLBA"="SL"),
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"="GP",
"Respiration" ="R"),
treatment= c("Shallow"= "shallow",
"Mesophotic"= "deep")
Allsumfinal3 = apply_labels(Allsumfinal3,
fragment.ID2= c("Mesophotic PAST"="MA", "Mesophotic MCAV" ="MC",
"Mesophotic OFRA" ="MF",
"Mesophotic DLAB"="ML"
"Shallow PAST" = "SA",
"Shallow OFRA" ="SF",
"Shallow MCAV" ="SC"
"Shallow DLBA"="SL"),
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"="GP",
"Respiration" ="R"),
treatment= c("Shallow"= "shallow",
"Mesophotic"= "deep"))
"Shallow DLBA"="SL"),
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"="GP",
"Respiration" ="R"),
treatment= c("Shallow"= "shallow",
"Mesophotic"= "deep")
Allsumfinal3 = apply_labels(Allsumfinal3,
Allsumfinal3 = apply_labels(Allsumfinal3,
"Mesophotic MCAV" ="MC",
Allsumfinal3 = apply_labels(Allsumfinal3,
Allsumfinal3 = apply_labels(Allsumfinal3,
Allsumfinal3 = apply_labels(Allsumfinal3,
fragment.ID2= c("Mesophotic PAST"="MA",
"Mesophotic MCAV" ="MC",
"Mesophotic OFRA" ="MF",
"Mesophotic DLAB"="ML",
"Shallow PAST" = "SA",
"Shallow OFRA" ="SF",
"Shallow MCAV" ="SC",
"Shallow DLBA"="SL"),
treatment= c("Shallow"= "shallow",
"Mesophotic"= "deep")
meantopt_C = "Thermal Optimum (ºC)",
meanPmax = "Performance Maximum (',mu,'cm^2/hr)",
meanE = "Activation Energy",
meanEh = "Deactivation Energy",
meanlnc = "Mean Metabolic Rate Across TPC",
meanTh = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
rate.type= c("Gross Photosynthesis"="GP",
"Respiration" ="R"))
Allsumfinal3 = apply_labels(Allsumfinal3,
fragment.ID2= c("Mesophotic PAST"="MA", "Mesophotic MCAV" ="MC",
Pmax2 = apply_labels(Pmax,
topt_C = "Thermal Optimum (ºC)",
Pmax = "Performance Maximum (',mu,'cm^2/hr)",
E = "Activation Energy",
Eh = "Deactivation Energy",
lnc = "Mean Metabolic Rate Across TPC",
Th = "Temperature (K) at which half of enzymes are inactivated",
species= "Species",
genotype= "Genotypes",
rate.type= c("Gross Photosynthesis"="GP",
"Respiration" ="R"),
treatment= c("Shallow"= "shallow",
"Mesophotic"= "deep"))
? expss
....
?expss
tab_transpose(Pmax2)
print(Pmax2)
write.table(Pmax2, file = "bush_south.txt", sep = ",", quote = FALSE, row.names = F)
TPCSTPCallr<-ggplot() +
geom_ribbon(data=subset(All.CIr, lwr_CI>0),
aes(x=K - 273.15, ymin = lwr_CI, ymax = upr_CI, group=group),fill = 'grey', alpha = .4) +
geom_point(data=All.fittedr, aes(x=(K - 273.15), y=log.rate, shape=rate.type)) +
geom_smooth(data=All.fittedr, aes(x=(K - 273.15), y=fitted, colour=group, se=F)) +
ylab('log Metabolic rate') +
xlab('Temperature (ºC)') +
facet_wrap(~treatment)+
theme_classic()+
labs(title="Thermal Performance Curves Across Depth and Genotype")
TPCTCall<-ggplot() +
geom_ribbon(data=subset(All.CI, lwr_CI>0),
aes(x=K - 273.15, ymin = lwr_CI, ymax = upr_CI, group=group),fill = 'grey', alpha = .4) +
geom_point(data=All.fitted, aes(x=(K - 273.15), y=log.rate, shape=treatment)) +
geom_smooth(data=All.fitted, aes(x=(K - 273.15), y=fitted, colour=group, se=F)) +
ylab('log Metabolic rate') +
xlab('Temperature (ºC)') +
facet_wrap(~species)+
theme_classic()+
labs(title="Thermal Performance Curves Across Species")
#----Graph the outputs--------
#graph with your wobbly predictions by rate.type and genotype
All.fittedr<-All.fittedT%<>%
mutate(group=factor(paste(rate.type,genotype)))
All.CIr<-All.CIT%<>%
mutate(group=factor(paste(rate.type,genotype, treatment)))
View(All.CIT)
All.fitted<-data.frame()#create an empty df to fill with fitted values
All.CI<-data.frame()#create an empty df. to fill with confidence intervals
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(ln.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fitted<<-rbind(All.fitted,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(ln.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.species<-(Data$species[1])
df.treatment<-(Data$treatment[1])
df.rate.type<-(Data$rate.type[1])
df.genotype<-(Data$genotype[1])
preds <- fit_boots %>%
unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(species=factor(df.species),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type),
genotype=factor(dr.genotype))
All.CI<<-rbind(All.CI, preds)
}
#-----put all the subsetted data through the function--------
#First run all of these and get All.fitted. and All. CI
#DLAB
mult.fit.curves(DLAB.DF.GP.deep)
mult.fit.curves<-function(Data){
fit2 <- nls_multstart(ln.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = Data,
iter = 500,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
supp_errors = 'Y',
na.action = na.omit,
lower = c(lnc = -10, E = 0, Eh = 0, Th = 0))
#print(fit2)
preds <- augment(fit2)
Data%<>%
mutate(fitted=preds$.fitted,
residuals=preds$.resid)
All.fitted<<-rbind(All.fitted,Data)
fit_boots <- Data %>%
modelr::bootstrap(n = 10, id = 'boot_num') %>% #change the number for more straps
group_by(boot_num) %>%
mutate(fit = map(strap, ~nls_multstart(ln.rate ~ schoolfield_high(lnc, E, Eh, Th, temp = K, Tc = 27),
data = data.frame(.),
iter = 100,
start_lower = c(lnc = -10, E = 0.1, Eh = 0.2, Th = 285),
start_upper = c(lnc = 10, E = 2, Eh = 5, Th = 330),
lower = c(lnc=-10, E=0, Eh=0, Th=0),
supp_errors = 'Y')
))
fit_boots
# get predictions
preds_boot <- fit_boots %>%
unnest(fit %>% map(augment)) %>%
ungroup()
new_preds <- Data %>%
do(., data.frame(K = seq(min(.$K), max(.$K), length.out = 250), stringsAsFactors = FALSE))
preds <- augment(fit2, newdata = new_preds)
df.species<-(Data$species[1])
df.treatment<-(Data$treatment[1])
df.rate.type<-(Data$rate.type[1])
df.genotype<-(Data$genotype[1])
preds <- fit_boots %>%
unnest(fit %>% map(augment, newdata = new_preds)) %>%
# group by each value of K and get quantiles
group_by(., K) %>%
summarise(lwr_CI = quantile(.fitted, 0.025),
upr_CI = quantile(.fitted, 0.975)) %>%
ungroup() %>%
merge(., preds, by = 'K')%>%
mutate(species=factor(df.species),
treatment=factor(df.treatment),
rate.type=factor(df.rate.type),
genotype=factor(df.genotype))
All.CI<<-rbind(All.CI, preds)
}
#-----put all the subsetted data through the function--------
#First run all of these and get All.fitted. and All. CI
#DLAB
mult.fit.curves(DLAB.DF.GP.deep)
cro(Pmax2$species, Pmax2$Pmax)
tab_transpose(Pmax2)
